{"version":3,"sources":["components/pages/Home.js","api/github.js","components/pages/Repo.js","components/pages/Results.js","components/sections/AppHeader.js","assets/theme.js","components/App.js","index.js"],"names":["Home","className","Typography","variant","align","githubApi","axios","create","baseURL","githubApiGetRepo","user","repo","get","Repo","useParams","history","useHistory","useState","repoData","setRepoData","fetchRepo","a","then","data","useEffect","name","size","created_at","language","description","stargazers_count","repo_url","html_url","owner","login","avatar_url","date","Date","toString","formatedSize","toFixed","Button","color","onClick","e","preventDefault","goBack","Box","mt","Card","CardHeader","title","href","rel","target","subheader","avatar","Avatar","src","CardContent","paragraph","py","LinearProgress","Results","query","useLocation","search","substr","repos","setRepos","last","setLast","loading","setLoading","loadMore","setLoadMore","observer","useRef","page","setPage","fetchData","useCallback","params","githubApiSearchRepos","q","per_page","newData","items","concat","reduce","acc","it","find","id","push","total_count","length","current","disconnect","IntersectionObserver","entries","isIntersecting","prev","rootMargin","observe","Grid","container","spacing","map","item","xs","sm","md","to","full_name","ref","AppHeader","setQuery","AppBar","position","p","justify","alignItems","Hidden","xsDown","pathname","onSubmit","TextField","fullWidth","autoFocus","label","inputProps","value","onChange","theme","createMuiTheme","palette","primary","main","blue","secondary","red","App","ThemeProvider","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f85a12a.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport function Home() {\n  return (\n    <div className=\"home-content\">\n      <Typography variant=\"h4\" align=\"center\">\n        Use search to find repos from Github\n      </Typography>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst githubApi = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport const githubApiSearchRepos = (params) => {\n  return githubApi.get('/search/repositories', { params });\n};\n\nexport const githubApiGetRepo = (user, repo) => {\n  return githubApi.get(`/repos/${user}/${repo}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  LinearProgress,\n} from '@material-ui/core';\nimport { githubApiGetRepo } from '../../api/github';\n\nexport function Repo() {\n  const { user, repo } = useParams();\n  const history = useHistory();\n\n  const [repoData, setRepoData] = useState(null);\n\n  const fetchRepo = async () => {\n    githubApiGetRepo(user, repo).then(({ data }) => {\n      setRepoData(data);\n    });\n  };\n\n  const handleBack = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  useEffect(() => {\n    fetchRepo();\n  }, []);\n\n  if (!!repoData) {\n    const {\n      name,\n      size,\n      created_at,\n      language,\n      description,\n      stargazers_count,\n      html_url: repo_url,\n      owner: { login, avatar_url, html_url },\n    } = repoData;\n\n    const date = new Date(created_at).toString();\n    const formatedSize = (size / 1000).toFixed(2);\n\n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleBack}>\n          Back\n        </Button>\n\n        <Box mt={2}>\n          <Card>\n            <CardHeader\n              title={\n                <Typography variant=\"h6\">\n                  <span>Repo: </span>\n                  <a href={repo_url} rel=\"noreferrer\" target=\"_blank\">\n                    {name}\n                  </a>\n                </Typography>\n              }\n              subheader={\n                <span>\n                  <span>By: </span>\n                  <a href={html_url} rel=\"noreferrer\" target=\"_blank\">\n                    {login}\n                  </a>\n                </span>\n              }\n              avatar={<Avatar src={avatar_url} />}\n            />\n            <CardContent>\n              <Typography paragraph>{description}</Typography>\n              <hr />\n              <Typography paragraph>\n                <strong>Created at:</strong> {date}\n              </Typography>\n              <Typography paragraph>\n                <strong>Language:</strong> {language}\n              </Typography>\n              <Typography paragraph>\n                <strong>Stars:</strong> {stargazers_count}\n              </Typography>\n              <Typography paragraph>\n                <strong>Size:</strong> {formatedSize} Mb\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n      </div>\n    );\n  }\n\n  return (\n    <Box py={4}>\n      <LinearProgress />\n    </Box>\n  );\n}\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  Fragment,\n} from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  Avatar,\n  LinearProgress,\n  Box,\n} from '@material-ui/core';\nimport { githubApiSearchRepos } from '../../api/github';\n\nexport function Results() {\n  const query = useLocation().search.substr(1);\n\n  const [repos, setRepos] = useState([]);\n  const [last, setLast] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [loadMore, setLoadMore] = useState(true);\n  const observer = useRef();\n\n  // Query params\n  const [page, setPage] = useState(1);\n  const per_page = 50;\n\n  const fetchData = useCallback(() => {\n    const params = { q: query, page, per_page };\n\n    githubApiSearchRepos(params).then(({ data }) => {\n      const newData =\n        page === 1\n          ? data.items\n          : repos.concat(data.items).reduce((acc, it) => {\n              if (!acc.find(({ id }) => id === it.id)) {\n                acc.push(it);\n              }\n              return acc;\n            }, []);\n\n      setRepos(newData);\n      setLoadMore(data.total_count > newData.length);\n      setLoading(false);\n    });\n  }, [query, page]);\n\n  const initInterseptor = () => {\n    return new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          setPage((prev) => prev + 1);\n        }\n      },\n      { rootMargin: '200px' }\n    );\n  };\n\n  useEffect(() => {\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    if (loadMore) {\n      setLoading(true);\n      observer.current = initInterseptor();\n    }\n\n    if (last) {\n      observer.current.observe(last);\n    }\n  }, [last]);\n\n  useEffect(() => {\n    setPage(1);\n    setRepos([]);\n  }, [query]);\n\n  useEffect(() => {\n    fetchData();\n  }, [page, fetchData]);\n\n  return (\n    <div>\n      {!!repos.length && (\n        <Fragment>\n          <Grid container spacing={2}>\n            {repos.map((repo) => (\n              <Grid item xs={12} sm={6} md={4} key={repo.id}>\n                <Link to={`/${repo.full_name}`}>\n                  <Card>\n                    <CardHeader\n                      title={repo.name}\n                      subheader={repo.owner.login}\n                      avatar={<Avatar src={repo.owner.avatar_url} />}\n                    />\n                  </Card>\n                </Link>\n              </Grid>\n            ))}\n          </Grid>\n          {loadMore && <div ref={setLast} />}\n        </Fragment>\n      )}\n\n      {loading && (\n        <Box py={4}>\n          <LinearProgress />\n        </Box>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Box,\n  Hidden,\n  Typography,\n  TextField,\n  Grid,\n} from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router';\n\nexport function AppHeader() {\n  const [query, setQuery] = useState('');\n  const history = useHistory();\n  const { search } = useLocation();\n\n  const handleInput = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push({\n      pathname: '/results',\n      search: query,\n    });\n  };\n\n  const handleHome = () => {\n    history.push({\n      pathname: '/',\n      search: '',\n    });\n  };\n\n  useEffect(() => {\n    setQuery(search.substr(1));\n  }, [search]);\n\n  return (\n    <div className=\"app-header\">\n      <AppBar position=\"relative\">\n        <Box p={2}>\n          <Grid\n            container\n            spacing={2}\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Hidden xsDown>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h5\" onClick={handleHome} className=\"logo\">\n                  Github Search\n                </Typography>\n              </Grid>\n            </Hidden>\n\n            <Grid item xs={12} sm={6}>\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  fullWidth\n                  autoFocus\n                  label=\"Repo name...\"\n                  variant=\"filled\"\n                  inputProps={{ value: query, onChange: handleInput }}\n                />\n              </form>\n            </Grid>\n          </Grid>\n        </Box>\n      </AppBar>\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, red } from '@material-ui/core/colors';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home, Results, Repo } from './pages';\nimport { AppHeader } from './sections';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from '../assets/theme';\nimport '../assets/styles.css';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename=\"/github-search-app/\">\n        <AppHeader />\n        <div className=\"app-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/results\" component={Results} />\n            <Route exact path=\"/:user/:repo\" component={Repo} />\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}